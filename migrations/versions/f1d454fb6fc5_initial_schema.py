"""Initial schema

Revision ID: f1d454fb6fc5
Revises: 
Create Date: 2025-06-05 21:08:06.904204

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f1d454fb6fc5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('profile_img', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('profile_img')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table('session',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('session_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('ip_address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('user_agent', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_index(op.f('ix_session_session_id'), 'session', ['session_id'], unique=False)
    op.create_index(op.f('ix_session_user_id'), 'session', ['user_id'], unique=False)
    op.create_table('story',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('COMPLETE', 'ON_HAITUS', 'ONGOING', name='storystatus'), nullable=False),
    sa.Column('path_array', postgresql.ARRAY(sa.String()), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'title')
    )
    op.create_index(op.f('ix_story_title'), 'story', ['title'], unique=False)
    op.create_index(op.f('ix_story_user_id'), 'story', ['user_id'], unique=False)
    op.create_table('chapter',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('story_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('published', sa.Boolean(), nullable=False),
    sa.Column('next_chapter_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('prev_chapter_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.CheckConstraint('id != next_chapter_id', name='no_self_next_reference'),
    sa.CheckConstraint('id != prev_chapter_id', name='no_self_prev_reference'),
    sa.CheckConstraint('prev_chapter_id != next_chapter_id OR prev_chapter_id IS NULL OR next_chapter_id IS NULL', name='no_circular_prev_next'),
    sa.ForeignKeyConstraint(['next_chapter_id'], ['chapter.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['prev_chapter_id'], ['chapter.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['story_id'], ['story.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'story_id', 'title')
    )
    op.create_index(op.f('ix_chapter_story_id'), 'chapter', ['story_id'], unique=False)
    op.create_index(op.f('ix_chapter_user_id'), 'chapter', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_chapter_user_id'), table_name='chapter')
    op.drop_index(op.f('ix_chapter_story_id'), table_name='chapter')
    op.drop_table('chapter')
    op.drop_index(op.f('ix_story_user_id'), table_name='story')
    op.drop_index(op.f('ix_story_title'), table_name='story')
    op.drop_table('story')
    op.drop_index(op.f('ix_session_user_id'), table_name='session')
    op.drop_index(op.f('ix_session_session_id'), table_name='session')
    op.drop_table('session')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
